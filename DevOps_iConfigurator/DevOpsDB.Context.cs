//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DevOps_iConfigurator
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DevOpsCGEntities : DbContext
    {
        public DevOpsCGEntities()
            : base("name=DevOpsCGEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<DevOps_Questions> DevOps_Questions { get; set; }
        public virtual DbSet<Section> Sections { get; set; }
        public virtual DbSet<Questions_Options> Questions_Options { get; set; }
    
        public virtual ObjectResult<Sp_GetDesc_Result> Sp_GetDesc(Nullable<int> no)
        {
            var noParameter = no.HasValue ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetDesc_Result>("Sp_GetDesc", noParameter);
        }
    
        public virtual ObjectResult<Question> GetDescription(Nullable<int> no)
        {
            var noParameter = no.HasValue ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Question>("GetDescription", noParameter);
        }
    
        public virtual ObjectResult<Question> GetDescription(Nullable<int> no, MergeOption mergeOption)
        {
            var noParameter = no.HasValue ?
                new ObjectParameter("No", no) :
                new ObjectParameter("No", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Question>("GetDescription", mergeOption, noParameter);
        }
    
        public virtual ObjectResult<string> get_details(string pageNo)
        {
            var pageNoParameter = pageNo != null ?
                new ObjectParameter("pageNo", pageNo) :
                new ObjectParameter("pageNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_details", pageNoParameter);
        }
    
        public virtual ObjectResult<Sp_GetQuesID_Result> Sp_GetQuesID(Nullable<int> questionID)
        {
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("questionID", questionID) :
                new ObjectParameter("questionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetQuesID_Result>("Sp_GetQuesID", questionIDParameter);
        }
    
        public virtual ObjectResult<string> get_details1(string pageNo)
        {
            var pageNoParameter = pageNo != null ?
                new ObjectParameter("pageNo", pageNo) :
                new ObjectParameter("pageNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_details1", pageNoParameter);
        }
    
        public virtual int SearchQuestion(Nullable<int> questionID)
        {
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("questionID", questionID) :
                new ObjectParameter("questionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchQuestion", questionIDParameter);
        }
    
        public virtual ObjectResult<SearchQuestion1_Result> SearchQuestion1(Nullable<int> questionID)
        {
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("questionID", questionID) :
                new ObjectParameter("questionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchQuestion1_Result>("SearchQuestion1", questionIDParameter);
        }
    }
}
