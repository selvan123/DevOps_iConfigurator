{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Launch artifactory.",
    "Parameters": {
    "Region": {
	"Description": "Select the region as here there are only two region where I can create the template",
	"Type": "String",
	"Default":"Asia Pacific (Mumbai)",
	 "AllowedValues": ["Asia Pacific (Mumbai)","US East (Ohio)"]

    },
        "KeyName": {
            "Description": "Take the keypair from the user",      
            "Type": "AWS::EC2::KeyPair::KeyName" 
            
        },
        "InstanceType": {
            "Description": "Select the instance type whic you want to select or else the default is t2.micro instance",   
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": ["t2.micro", "t2.small", "t2.medium"]
        }
	},
	"Mappings" : {
	    "RegionMap" : {
      "us-east-2" : {"64" : "ami-ea87a78f" },
      "ap-south-1" : {"64" : "ami-d7abd1b8" }  
    }
  },
    "Resources": {
        "Server": {
	"Description" : "here the instance will be created based on the key,region, and instance type and the given command in Userdata will be run and the service will be started",
            "Type": "AWS::EC2::Instance",   
            "Properties": {
               "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "64"]},
                "InstanceType": {"Ref": "InstanceType"},
                "KeyName": {"Ref": "KeyName"},
                "UserData":
                {"Fn::Base64": {"Fn::Join": ["", [
                     "#!/bin/bash -ex \n",
					"sudo su - \n",
					"yum update -y \n",
					"yum install java-1.8.0 -y \n",
                    "yum remove java-1.7.0-openjdk -y \n",
                    "wget https://bintray.com/jfrog/artifactory-pro-rpms/rpm -O bintray-jfrog-artifactory-pro-rpms.repo \n",
                    "sudo mv bintray-jfrog-artifactory-pro-rpms.repo /etc/yum.repos.d/ \n",
                    "yum install jfrog-artifactory-pro -y \n",
                    "service artifactory start \n"

					
                ]]}
                }
            }
        }
	},
    "Outputs": {
    }
}
